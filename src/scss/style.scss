@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "NewRocker";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$black: #000;
$white: #fff;

$mainColor: $black; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 0;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
}

.preloader {
	position: fixed;
	left: 0;
	top: 0;
	z-index: 999;
	width: 100%;
	height: 100%;
	background: $white url("../img/logo.svg") center center no-repeat;

	.loaded_hiding & {
		opacity: 0;
		transition: opacity 1s ease;
	}

	.loaded & {
		display: none;
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

.page__wrapper {
	@media screen and (min-width: $tablet) {
		display: flex;
	}
}

.column {
	@media screen and (min-width: $tablet) {
		flex: 0 1 75%;
	}
}

.aside {
	@media screen and (min-width: $tablet) {
		flex: 0 1 25%;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
@import "about";

//========================================================================================================================================================

.grid {
	@include adaptiveValue("padding-left", 40, 20);
	@include adaptiveValue("padding-right", 40, 20);
	@include adaptiveValue("padding-top", 80, 40);
	@include adaptiveValue("padding-bottom", 80, 40);

	// .grid__list
	&__list {
		display: grid;

		@media screen and (min-width: $mobile) {
			gap: 40px;
			grid-template-columns: 1fr 1fr 1fr;
		}

		@media screen and (max-width: $mobile) {
			grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
			gap: 20px;
		}
	}
	// .grid__item
	&__item {
		@media screen and (min-width: $mobile) {
			&:nth-child(8n + 1) {
				grid-area: 1 / 1 / 3 / 2;
			}
			&:nth-child(8n + 2) {
				grid-area: 1 / 2 / 4 / 3;
			}
			&:nth-child(8n + 3) {
				grid-area: 1 / 3 / 5 / 4;
			}
			&:nth-child(8n + 4) {
				grid-area: 3 / 1 / 6 / 2;
			}
			&:nth-child(8n + 5) {
				grid-area: 4 / 2 / 6 / 3;
			}
			&:nth-child(8n + 6) {
				grid-area: 5 / 3 / 9 / 4;
			}
			&:nth-child(8n + 7) {
				grid-area: 6 / 1 / 9 / 2;
			}

			&:nth-child(8n + 8) {
				grid-area: 6 / 2 / 8 / 3;
			}
		}
	}
	// .grid__img
	&__img {
		height: 100%;

		img {
			display: block;
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
	}
}
